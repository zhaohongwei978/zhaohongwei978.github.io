(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{278:function(e,n,t){"use strict";t.r(n);var o=t(5),a=Object(o.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[e._v("#")]),e._v(" 生命周期")]),e._v(" "),t("p",[e._v("父子组件加载渲染过程")]),e._v(" "),t("ul",[t("li",[e._v("父beforeCreate->父created->父beforeMount->子beforeCreate->子created->子beforeMount->子mounted->父mounted")]),e._v(" "),t("li",[e._v("子组件更新过程")]),e._v(" "),t("li",[e._v("父beforeUpdate->子beforeUpdate->子updated->父updated")]),e._v(" "),t("li",[e._v("父组件更新过程")]),e._v(" "),t("li",[e._v("父beforeUpdate->父updated")]),e._v(" "),t("li",[e._v("销毁过程")]),e._v(" "),t("li",[e._v("父beforeDestroy->子beforeDestroy->子destroyed->父destroyed")])]),e._v(" "),t("h2",{attrs:{id:"一个父组件嵌套a-b两个子组件此时ab组件的执行顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一个父组件嵌套a-b两个子组件此时ab组件的执行顺序"}},[e._v("#")]),e._v(" 一个父组件嵌套A B两个子组件此时AB组件的执行顺序")]),e._v(" "),t("p",[e._v("（在父组件中先书写A组件在书写B组件）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('  <A  :msg="msg" />\n  <B  :msg="msg" />\n\n执行顺序\n\nfather beforeCreate\nfather created\nfather beforeMount\nA beforeCreate\nA created\nA beforeMount\nB beforeCreate\nB created\nB beforeMount\nA moutend\nB moutend\nfather moutend\n')])])]),t("p",[e._v("父组件的更新data中的数据会调用 father beforeUplate,子组件props如果产生更新，子组件会调用到 sun beforeUptate 和sun uptated。但是子组件不会初始化data（如果想要子组件初始化data，可以在子组件引用的时候套上v-if）\n或者通过watch或者computed监听data。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//父组件\n<template>\n  <A  :msg=\"msg\" />\n  <B  :msg=\"msg\" />\n\n</template>\n\n<script>\nimport A from './components/A.vue'\nimport B from './components/B.vue'\nexport default {\n  name: 'App',\n  components: {\n    A,\n    B,\n  },\n  data(){\n      return{\n          msg:'11',\n          flag:false,\n      }\n  },\n  beforeCreate(){\n      console.log('father beforeCreate')\n  },\n  created(){\n      console.log('father created')\n  },\n  beforeMount(){\n      console.log('father beforeMount')\n  },\n  mounted(){\n      console.log('father mounted')\n      setTimeout(()=>{\n          this.flag = '1111111';\n      },3000)\n  },\n  beforeUpdate(){\n      console.log('father beforeUpdate')\n  },\n  updated(){\n      console.log('father updated')\n  },\n  beforeUnmount(){\n      console.log('father beforeUnmount')\n  },\n  unmounted(){\n      console.log('father unmounted')\n  }\n}\n<\/script>\n\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//子组件\n<template>\n  <div class=\"hello\">\n    <h1>{{ info }}</h1>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'A',\n  props: {\n    msg: {\n        type:String\n    }\n  },\n  data(){\n      return{\n          info:this.msg\n      }\n  },\n  beforeCreate(){\n      console.log('A beforeCreate')\n  },\n  created(){\n      console.log('A created')\n  },\n  beforeMount(){\n      console.log('A beforeMount')\n  },\n  mounted(){\n      console.log('A mounted')\n  },\n  beforeUpdate(){\n      console.log('A beforeUpdate')\n  },\n  updated(){\n      console.log('sun updated')\n  },\n  beforeUnmount(){\n      console.log('sun beforeUnmount')\n  },\n  unmounted(){\n      console.log('sun unmounted')\n  }\n}\n<\/script>\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);