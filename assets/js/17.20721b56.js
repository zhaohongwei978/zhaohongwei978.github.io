(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{201:function(r,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var r=this,t=r.$createElement,a=r._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h1",{attrs:{id:"数组操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组操作"}},[r._v("#")]),r._v(" 数组操作")]),r._v(" "),a("h2",{attrs:{id:"数组去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[r._v("#")]),r._v(" 数组去重")]),r._v(" "),a("ul",[a("li",[r._v("利用 set 去重")])]),r._v(" "),a("div",{staticClass:"language-$xslt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[r._v("let arr = [1,2,3,1,5]\nconsole.log(Array.from(new Set(arr)))\n")])])]),a("ul",[a("li",[r._v("利用下标")])]),r._v(" "),a("div",{staticClass:"language-$xslt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[r._v("const arr = [1,2,3,1,5]\nfunction unique2(arr){\n    const hash=[];\n    for (let i = 0; i < arr.length; i++) {\n        if(arr.indexOf(arr[i])==i){\n            hash.push(arr[i]);\n        }\n    }\n    return hash;\n}\nconsole.log(unique2(arr));\n")])])]),a("h2",{attrs:{id:"数组扁平化处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组扁平化处理"}},[r._v("#")]),r._v(" 数组扁平化处理")]),r._v(" "),a("ul",[a("li",[r._v("通过递归的方式")])]),r._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[r._v("/* ES6 */\nconst flatten = (arr) => {\n  let result = [];\n  arr.forEach((item, i, arr) => {\n    if (Array.isArray(item)) {\n      result = result.concat(flatten(item));\n    } else {\n      result.push(arr[i])\n    }\n  })\n  return result;\n};\n\nconst arr = [1, [2, [3, 4]]];\nconsole.log(flatten(arr));\n")])])]),a("ul",[a("li",[r._v("通过 toString 方法")])]),r._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[r._v("[1, [2, 3, [4]]].toString() // \"1,2,3,4\"\n/* ES6 */\nconst flatten = (arr) => arr.toString().split(',').map((item) => +item);\n\nconst arr = [1, [2, [3, 4]]];\nconsole.log(flatten(arr));\n")])])]),a("h2",{attrs:{id:"不使用循环-创建一个长度-100-的数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不使用循环-创建一个长度-100-的数组"}},[r._v("#")]),r._v(" 不使用循环，创建一个长度 100 的数组")]),r._v(" "),a("ul",[a("li",[a("p",[r._v("方法 1 Array.keys()")]),r._v(" "),a("p",[r._v("Array.from(new Array(100).leys())")])]),r._v(" "),a("li",[a("p",[r._v("方法 2 Array.from()")]),r._v(" "),a("p",[r._v("var arr = Array.from({length:100}, (v,k) => k);\nconsole.log(arr);")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);