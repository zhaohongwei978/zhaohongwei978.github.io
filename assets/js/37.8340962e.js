(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{251:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[s._v("#")]),s._v(" 正则表达式")]),s._v(" "),a("h2",{attrs:{id:"量词元字符-出现的次数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词元字符-出现的次数"}},[s._v("#")]),s._v(" 量词元字符(出现的次数)")]),s._v(" "),a("ul",[a("li",[s._v("*: 零到多次")]),s._v(" "),a("li",[s._v("+: 一到多次")]),s._v(" "),a("li",[s._v("?: 零次或一次")]),s._v(" "),a("li",[s._v("{n}: 出现n次")]),s._v(" "),a("li",[s._v("{n,}: n-多次,至少出现n次")]),s._v(" "),a("li",[s._v("{n,m}: n-m次")])]),s._v(" "),a("h2",{attrs:{id:"特殊元字符-单个或组合一起代表特殊的含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊元字符-单个或组合一起代表特殊的含义"}},[s._v("#")]),s._v(" 特殊元字符: 单个或组合一起代表特殊的含义")]),s._v(" "),a("ul",[a("li",[s._v("\\转义字符 (特殊->普通->特殊)")]),s._v(" "),a("li",[s._v(".: 除换行符之外的字符")]),s._v(" "),a("li",[s._v("^: 以哪个元字符作为开始")]),s._v(" "),a("li",[s._v("$: 以那个元字符作为结束")]),s._v(" "),a("li",[s._v("\\n: 换行符")]),s._v(" "),a("li",[s._v("\\d: 0-9的任意数字")]),s._v(" "),a("li",[s._v("\\D: 非0-9的数字 (大小写的意思是相反的)")]),s._v(" "),a("li",[s._v("\\w: 字母,数字或下划线中任意一个字符")]),s._v(" "),a("li",[s._v("\\s: 一个空白字符(包括换行,空格,制表符)")]),s._v(" "),a("li",[s._v("\\S: 匹配一个非空白字符")]),s._v(" "),a("li",[s._v("\\t: 一个制表符(四个空格)")]),s._v(" "),a("li",[s._v("\\b: 匹配一个单词的边界")]),s._v(" "),a("li",[s._v("x|y: x或者y中的一个字符")]),s._v(" "),a("li",[s._v("“[xyz]”: x或y或z的一个字符(数组内字符长度无限制)")]),s._v(" "),a("li",[s._v("“[^xy]”: 除了xy以外的字符")]),s._v(" "),a("li",[s._v("“[a-z]”: 指定a-z范围中的任意字符 => [0-9a-zA-Z_]: 0-9h或者a-z或者A-Z或者_的任意字符")]),s._v(" "),a("li",[s._v("(): 正则中的分组符号")]),s._v(" "),a("li",[s._v("(?😃 只匹配不捕获")]),s._v(" "),a("li",[s._v("(?=) 正向预查")]),s._v(" "),a("li",[s._v("(?!) 负向预查")])]),s._v(" "),a("h2",{attrs:{id:"常用的修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的修饰符"}},[s._v("#")]),s._v(" 常用的修饰符:")]),s._v(" "),a("ul",[a("li",[s._v("i=> ignorecase: 忽略单词大小写")]),s._v(" "),a("li",[s._v("m=> multiline: 多行匹配")]),s._v(" "),a("li",[s._v("g=> global: 全局匹配")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\bis\\b")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'a IS b is isccc'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\bis\\b")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'a IS b IS isccc'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用构造函数方式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\\\bis\\\\b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dadadabcda'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("[abc]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//dAdadabcda")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dadadabcda'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("[^abc]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//AaAaAabcAa 取反")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);