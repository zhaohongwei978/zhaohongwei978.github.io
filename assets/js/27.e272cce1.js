(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{240:function(a,t,r){"use strict";r.r(t);var e=r(5),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"数组操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组操作"}},[a._v("#")]),a._v(" 数组操作")]),a._v(" "),r("h2",{attrs:{id:"数组去重"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[a._v("#")]),a._v(" 数组去重")]),a._v(" "),r("ul",[r("li",[a._v("利用 set 去重")])]),a._v(" "),r("div",{staticClass:"language-$xslt extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("let arr = [1,2,3,1,5]\nconsole.log(Array.from(new Set(arr)))\n")])])]),r("ul",[r("li",[a._v("利用下标")])]),a._v(" "),r("div",{staticClass:"language-$xslt extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("const arr = [1,2,3,1,5]\nfunction unique2(arr){\n    const hash=[];\n    for (let i = 0; i < arr.length; i++) {\n        if(arr.indexOf(arr[i])==i){\n            hash.push(arr[i]);\n        }\n    }\n    return hash;\n}\nconsole.log(unique2(arr));\n")])])]),r("h2",{attrs:{id:"找出数组中的最大值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#找出数组中的最大值"}},[a._v("#")]),a._v(" 找出数组中的最大值")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("function getMax(arr){\n  if(arr.length ===0) return\n  if(arr.length ===1) return arr[0]\n  return Math.max(...arr)\n}\n")])])]),r("h2",{attrs:{id:"math-max的实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#math-max的实现"}},[a._v("#")]),a._v(" Math.max的实现")]),a._v(" "),r("div",{staticClass:"language-angular2html extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("\nfunction max() {\n    const args= Array.prototype.slice.call(arguments)\n    let max = 0;\n    args.forEach((item)=>{\n\n        if(item>max){\n\n            max = item\n        }\n    })\n\n    return max\n}\nconsole.log(max(20,40,30))\n\n")])])]),r("h2",{attrs:{id:"数组扁平化处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组扁平化处理"}},[a._v("#")]),a._v(" 数组扁平化处理")]),a._v(" "),r("ul",[r("li",[a._v("通过递归的方式")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("/* ES6 */\nconst flatten = (arr) => {\n  let result = [];\n  arr.forEach((item, i, arr) => {\n    if (Array.isArray(item)) {\n      result = result.concat(flatten(item));\n    } else {\n      result.push(arr[i])\n    }\n  })\n  return result;\n};\n\nconst arr = [1, [2, [3, 4]]];\nconsole.log(flatten(arr));\n")])])]),r("ul",[r("li",[a._v("通过 toString 方法")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("[1, [2, 3, [4]]].toString() // \"1,2,3,4\"\n/* ES6 */\nconst flatten = (arr) => arr.toString().split(',').map((item) => +item);\n\nconst arr = [1, [2, [3, 4]]];\nconsole.log(flatten(arr));\n")])])]),r("ul",[r("li",[a._v("通过 es6的flat方法")])]),a._v(" "),r("div",{staticClass:"language-angular2html extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("console.log([1,2,3[3,4]].flat(2))//参数代表展开的层级\n")])])]),r("h2",{attrs:{id:"不使用循环-创建一个长度-100-的数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不使用循环-创建一个长度-100-的数组"}},[a._v("#")]),a._v(" 不使用循环，创建一个长度 100 的数组")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("方法 1 Array.keys()")]),a._v(" "),r("p",[a._v("Array.from(new Array(100).leys())")])]),a._v(" "),r("li",[r("p",[a._v("方法 2 Array.from()")]),a._v(" "),r("p",[a._v("var arr = Array.from({length:100}, (v,k) => k);\nconsole.log(arr);")])])]),a._v(" "),r("h2",{attrs:{id:"splice-0-妙用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#splice-0-妙用"}},[a._v("#")]),a._v(" splice(0)妙用")]),a._v(" "),r("ul",[r("li",[a._v("splice 会改变原数组，slice 不会改变原数组。")]),a._v(" "),r("li",[a._v("splice(0)会把以前的数据清空，并使用一个新数组。")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("let a = [1,2,3,4]\n\nlet b = a.splice(0)\n\nconsole.log(a)\nconsole.log(b)\n//打印结果\n[]\n[1,2,3,4]\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);