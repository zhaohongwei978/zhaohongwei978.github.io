(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{234:function(t,n,e){"use strict";e.r(n);var r=e(5),o=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"new-的过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-的过程"}},[t._v("#")]),t._v(" new 的过程")]),t._v(" "),e("p",[t._v("new 在执行的过程中，如果有return 即返回return的内容，如果没有return 返回的是this实例。")]),t._v(" "),e("ul",[e("li",[t._v("1 创建空对象")]),t._v(" "),e("li",[t._v("2this 指向新对象，执行构造函数的代码。")]),t._v(" "),e("li",[t._v("3 设置原型链，新对象"),e("strong",[t._v("proto")]),t._v(" 指向构造函数的 prototype")]),t._v(" "),e("li",[t._v("4 判断传入对象类型是否一个对象，是则返回新对象 否则直接返回。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('1 创建一个空对象\n2 新对象继承Person.prototype\n3 使用指定的参数调用构造函数 Person ，并将 this 绑定到新创建的对象\n4 返回最初创建的对象\nfunction myNew(Fn,args) {\n    let obj = {};//创建一个空对象\n    if(Fn && typeof Fn === "function"){\n        obj.__proto__ = Fn.prototype;\n        obj.call(Fn,...args);\n        return obj;\n    }\n}\n')])])])])}),[],!1,null,null,null);n.default=o.exports}}]);